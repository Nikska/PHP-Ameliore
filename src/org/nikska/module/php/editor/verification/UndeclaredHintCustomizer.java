/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.nikska.module.php.editor.verification;

import java.util.prefs.Preferences;

/**
 *
 * @author nikska
 */
public class UndeclaredHintCustomizer extends javax.swing.JPanel {
    private final UndeclaredHint undeclaredHint;
    private final Preferences preferences;

    /* Creates new form AccidentalAssignmentCustomizer */
    public UndeclaredHintCustomizer(Preferences preferences, UndeclaredHint undeclaredHint) {
        this.preferences = preferences;
        this.undeclaredHint = undeclaredHint;
        initComponents();
        checkUndeclaredFunctionCheckBox.setSelected(undeclaredHint.checkUndeclaredFunction(preferences));
        checkUndeclaredClassCheckBox.setSelected(undeclaredHint.checkUndeclaredClass(preferences));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        checkUndeclaredClassCheckBox = new javax.swing.JCheckBox();
        checkUndeclaredFunctionCheckBox = new javax.swing.JCheckBox();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(427, 304));

        checkUndeclaredClassCheckBox.setMnemonic('a');
        checkUndeclaredClassCheckBox.setText(org.openide.util.NbBundle.getMessage(UndeclaredHintCustomizer.class, "UndeclaredHintCustomizer.cbUndeclaredClass.text")); // NOI18N
        checkUndeclaredClassCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkUndeclaredClassCheckBoxActionPerformed(evt);
            }
        });

        checkUndeclaredFunctionCheckBox.setMnemonic('C');
        checkUndeclaredFunctionCheckBox.setText(org.openide.util.NbBundle.getMessage(UndeclaredHintCustomizer.class, "UndeclaredHintCustomizer.cbUndeclaredFunction.text")); // NOI18N
        checkUndeclaredFunctionCheckBox.setToolTipText("");
        checkUndeclaredFunctionCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkUndeclaredFunctionCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkUndeclaredFunctionCheckBox)
                    .addComponent(checkUndeclaredClassCheckBox))
                .addContainerGap(219, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkUndeclaredFunctionCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkUndeclaredClassCheckBox)
                .addContainerGap(228, Short.MAX_VALUE))
        );

        checkUndeclaredClassCheckBox.getAccessibleContext().setAccessibleParent(this);
        checkUndeclaredFunctionCheckBox.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(UndeclaredHintCustomizer.class, "UndeclaredHintCustomizer.cbUndeclaredFunction.accessibleName")); // NOI18N
        checkUndeclaredFunctionCheckBox.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(UndeclaredHintCustomizer.class, "UndeclaredHintCustomizer.cbUndeclaredFunction.accessibleDescription")); // NOI18N
        checkUndeclaredFunctionCheckBox.getAccessibleContext().setAccessibleParent(this);

        add(jPanel1, java.awt.BorderLayout.CENTER);
        jPanel1.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(UndeclaredHintCustomizer.class, "UndeclaredHintCustomizer.panel.accessibleDescription")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    private void checkUndeclaredClassCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkUndeclaredClassCheckBoxActionPerformed
        undeclaredHint.setCheckUndeclaredClass(preferences, checkUndeclaredClassCheckBox.isSelected());
    }//GEN-LAST:event_checkUndeclaredClassCheckBoxActionPerformed

    private void checkUndeclaredFunctionCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkUndeclaredFunctionCheckBoxActionPerformed
        undeclaredHint.setCheckUndeclaredFunction(preferences, checkUndeclaredFunctionCheckBox.isSelected());
    }//GEN-LAST:event_checkUndeclaredFunctionCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkUndeclaredClassCheckBox;
    private javax.swing.JCheckBox checkUndeclaredFunctionCheckBox;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
